class Solution {
    public List<List<Integer>> findSubsequences(int[] nums) {
        HashSet<List<Integer>> set = new HashSet<>();
        int[] arr = nums;
        List<Integer> list = new ArrayList<>();
        recursion(list,0,set,arr);
        List<List<Integer>> result = new ArrayList<>(set);
        return result;
    }

    public void recursion(List<Integer> list, int index,HashSet<List<Integer>> set,int[] arr){
        if(list.size()>=2) set.add(new ArrayList(list));

        for(int i = index;i<arr.length;i++){
            if(list.size() == 0 || arr[i]>= list.get(list.size()-1)){
                list.add(arr[i]);
                recursion(list,i+1,set,arr);
                list.remove(list.size()-1);
            }
        }

    }
}