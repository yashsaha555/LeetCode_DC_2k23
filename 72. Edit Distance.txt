class Solution {
    int dp[][] = new int[501][501];
    public int minDistance(String word1, String word2) {
        int l1 = word1.length()-1;
        int l2 = word2.length()-1;
        for(int i[]:dp){
            Arrays.fill(i,-1);
        }
        return solve(word1,l1,word2,l2);
    }
    public int solve(String word1, int l1, String word2, int l2){
        if(l1<0) return l2+1;
        if(l2<0) return l1+1;
        if(dp[l1][l2]!=-1) return dp[l1][l2];
        if(word1.charAt(l1)==word2.charAt(l2))
        return dp[l1][l2]=solve(word1,l1-1,word2,l2-1);
        int insert = 1+solve(word1,l1,word2,l2-1);
        int delete = 1+solve(word1,l1-1,word2,l2);
        int replace = 1+solve(word1,l1-1,word2,l2-1);
        return dp[l1][l2]=Math.min(insert,Math.min(delete, replace));
    }
}
