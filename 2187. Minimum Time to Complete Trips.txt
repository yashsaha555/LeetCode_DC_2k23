class Solution {
    public long minimumTime(int[] time, int totalTrips) {

        /* We will apply Binary Search on possible answers */

        long high = Arrays.stream(time).max().orElse(0)*(long)totalTrips;
        long low = 0;
        long ans = 0;
        while(low<=high){
            long mid = low+(high-low)/2;
            if(isValid(time, totalTrips, mid)){
                ans = mid;
                high = mid-1;
            }else{
                low = mid+1;
            }
        }
        return ans;
    }
    
    private boolean isValid(int[] time, int totalTrips, long maxT){
        long total = 0;
        for(int i:time){
            total+=maxT/i;
        }
        return total>=totalTrips;
    }
}